name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present

  pgrita:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgres://beachvolley_graphile_superuser:dev_password@localhost:5432/beachvolley

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: beachvolley_graphile_superuser
          POSTGRES_PASSWORD: dev_password
          POSTGRES_DB: beachvolley
        ports:
          - "0.0.0.0:5432:5432"
        # needed because the postgres container does not provide a healthcheck
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - run: node ./ci-init-database.js
      - run: npm run migrations -- reset --erase
      - run: npm run migrations migrate
      - name: "Run pgRITA checks"
        uses: pgrita/action@main
        env:
          PGRITA_TOKEN: ${{ secrets.PGRITA_TOKEN }}
        with:
          project: beach-volley/beach-volley-app
